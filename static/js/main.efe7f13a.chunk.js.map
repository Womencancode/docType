{"version":3,"sources":["components/Circle.tsx","components/ColorPicker.tsx","App.tsx","index.tsx"],"names":["Circle","bgColor","style","backgroundColor","width","height","borderRadius","boxShadow","ColorPicker","useState","setBgColor","className","onSubmit","e","preventDefault","target","color","colorPicker","value","length","htmlFor","type","name","id","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAGe,SAASA,EAAT,GAAwC,IAAvBC,EAAsB,EAAtBA,QAC9B,OACE,yBAAKC,MAAO,CACRC,gBAAiBF,EACjBG,MAAO,OACPC,OAAQ,OACRC,aAAc,MACdC,UAAU,cAAD,OACKN,EADL,kC,MCNF,SAASO,IAAe,IAAD,EACJC,mBAAiB,SADb,mBAC3BR,EAD2B,KAClBS,EADkB,KAuBlC,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAACX,EAAD,CAAQC,QAASA,KAErB,0BAAMW,SAzBQ,SAACC,GACnBA,EAAEC,iBAGF,IAAMC,EAASF,EAAEE,OAGXC,EAAK,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAQE,YAAYC,MAEb,IAAjBF,EAAMG,QAIVT,EAAWM,GAGXD,EAAOE,YAAYC,MAAM,IANrBR,EAAW,WAgBP,yBAAKC,UAAU,cACX,2BAAOS,QAAQ,eAAf,iBACA,2BAAOC,KAAK,OAAOC,KAAK,cAAcC,GAAG,cAAcC,YAAY,WAEvE,4BAAQH,KAAK,SAASV,UAAU,UAAhC,kBCtBDc,MAXf,WACE,OACE,yBAAKd,UAAU,OACb,4BAAQA,UAAU,cAClB,qEACA,kBAAC,EAAD,SCJNe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.efe7f13a.chunk.js","sourcesContent":["import React from 'react'\n\ntype ColorProps = { bgColor: string }\nexport default function Circle({bgColor}: ColorProps) {\n  return (\n    <div style={{\n        backgroundColor: bgColor,\n        width: '50px',\n        height: '50px',\n        borderRadius: '50%',\n        boxShadow: \n        `0 0 0 16px ${bgColor}, 0 1px 2px rgba(0,0,0,0.1)`\n      }}>\n      \n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport Circle from './Circle';\nimport '../styles/ColorPicker.css';\n\nexport default function ColorPicker() {\n    const [bgColor, setBgColor] = useState<string>('black')\n\n    const changeBgColor = (e:React.SyntheticEvent) => {\n        e.preventDefault()\n        \n        \n        const target = e.target as typeof e.target & {\n            colorPicker: { value: string };\n        };\n        const color = target?.colorPicker.value; //typecheck\n        \n        if (color.length === 0){\n            setBgColor('black')\n            return\n        }\n        setBgColor(color)\n        \n        //reset input field\n        target.colorPicker.value=''    \n    }\n\n\n    return (\n        <div className=\"main-form\">\n            <div className=\"display-circle\">\n                <Circle bgColor={bgColor} />\n            </div>\n            <form onSubmit={changeBgColor}>\n                <div className=\"form-field\">\n                    <label htmlFor=\"colorPicker\">Enter a color</label>\n                    <input type=\"text\" name=\"colorPicker\" id=\"colorPicker\" placeholder=\"black\" />\n                </div>\n                <button type=\"submit\" className=\"button\">Update Color</button>\n            </form>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport './styles/App.css';\nimport ColorPicker from './components/ColorPicker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h3>DocType task : Update Color of circle</h3>\n      <ColorPicker/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}